{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Information"
    }
  },
  "IdentityServiceUrl": "http://localhost:5000",
  "ReverseProxy": {
    "Routes": {
      // this (below) is just a name, it can be any name, it doesn't matter but make sense to call it what it is
      // so this is gonna be for our AuctionService
      "auctionsRead": {
        // this clusterId will be matched down there (in "Clusters" section) which defines where we want this request
        // to be forwarded to
        "ClusterId": "auctions",
        "Match": {
          // the request path we want to match; so this is going to match a request coming in to /auctions, not 
          // api/auctions, just /auctions. But we need to transform this (down below) to where it's actually going to go,
          // so we do need a transformation here. We could just leave it as api/auctions and not need the transformation,
          // but let's have an example anyway by having the request coming in to a slightly different path than the service is 
          // actually listening on
          "Path": "/auctions/{**catch-all}",
          "Methods": [
            "GET"
          ]
          // accept only GET methods because we know that GET methods doesn't require authentication
        },
        "Transforms": [
          {
            // so all that's going to happen is this request (/auctions/{**catch-all}) comes in to our gateway service, it's gonna see
            // that this is a match for route "auctions", and it's gonna transform this request (down below) from /auctions whatever to 
            // what we have down below (api/auctions whatever)
            "PathPattern": "api/auctions/{**catch-all}"
          }
        ]
      },
      "auctionsWrite": {
        "ClusterId": "auctions",
        "AuthorizationPolicy": "default",
        "Match": {
          "Path": "/auctions/{**catch-all}",
          "Methods": [
            "POST",
            "PUT",
            "DELETE"
          ]
        },
        "Transforms": [
          {
            "PathPattern": "api/auctions/{**catch-all}"
          }
        ]
      },
      "search": {
        "ClusterId": "search",
        "Match": {
          // we're gonna catch anything that starts with search and we're gonna wanna forward to
          // this cluster address: "search"
          "Path": "/search/{**catch-all}",
          // we are not allowing any post or put methods in our search service so we can specify it
          "Methods": [
            "GET"
          ]
        },
        "Transforms": [
          {
            "PathPattern": "api/search/{**catch-all}"
          }
        ]
      }
    },
    "Clusters": {
      "auctions": {
        "Destinations": {
          // this name (down below) is not so important because we're gonna have a single address inside
          "auctionApi": {
            "Address": "http://localhost:7001"
          }
        }
      },
      "search": {
        "Destinations": {
          // this name (down below) is not so important because we're gonna have a single address inside
          "searchApi": {
            "Address": "http://localhost:7002"
          }
        }
      }
    }
  }
}
